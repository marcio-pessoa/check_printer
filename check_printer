#!/bin/bash
#
# Sintaxe: check_printer <IP_ADDR COMMUNITY RESOURCE WARNING CRITICAL>
#

# Program information
PROG=$0
VERSION="0.1b"

# Nagios levels
OK=0
WARNING=1
CRITICAL=2
UNKNOW=3

# SNMP OIDs
# Toner black
OID_black'.1.3.6.1.2.1.43.11.1.1.9.1.1'
# Toner cyan
OID_cyan='.1.3.6.1.2.1.43.11.1.1.9.1.2'
# Toner magenta
OID_magenta='.1.3.6.1.2.1.43.11.1.1.9.1.3'
# Toner yellow
OID_yellow='.1.3.6.1.2.1.43.11.1.1.9.1.4'

# Input options
IP_ADDR=$1
COMMUNITY=$2
RESOURCE=$3
LEVEL_WARNING=$4
LEVEL_CRITICAL=$5

# Commands
SNMPGET="`which snmpget` -Ov -v1 -Cf"

check_result() {
  # 
  RESULT=`$SNMPGET -c $COMMUNITY $IP_ADDR $OID | awk '{print $2}'`
  RESULT=`echo "scale=1; $RESULT/$FACTOR" | bc -l`

  # Set OK values
  MESSAGE="Check OK"
  RETURN=$OK

  # Check if result is warning ou critical level
  case "$CHECK_TYPE" in
    gt)
			check_reverse
			;;
    lt)
			check_direct
			;;
  esac

  # Return string and Nagios notification level
  echo "$MESSAGE: $NAME = $RESULT $UNIT | $NAME=$RESULT$UNIT;$LEVEL_WARNING;$LEVEL_CRITICAL"
  exit $RETURN
}

check_direct() {
  if [ `echo "$RESULT >= $LEVEL_WARNING" | bc` -eq 1 ]; then
    MESSAGE="Check Warning"
    RETURN=$WARNING
  fi
  if [ `echo "$RESULT >= $LEVEL_CRITICAL" | bc` -eq 1 ]; then
    MESSAGE="Check Critical"
    RETURN=$CRITICAL
  fi
}

# 
check_reverse() {
  if [ `echo "$RESULT < $LEVEL_WARNING" | bc` -eq 1 ]; then
    MESSAGE="Check Warning"
    RETURN=$WARNING
  fi
  if [ `echo "$RESULT < $LEVEL_CRITICAL" | bc` -eq 1 ]; then
    MESSAGE="Check Critical"
    RETURN=$CRITICAL
  fi
}

# 
case "$RESOURCE" in
  BLACK)
		OID=$OID_black
		NAME="Toner black"
		UNIT="%"
		FACTOR=1
		CHECK_TYPE=gt # Greater than
		check_result
		;;
  CYAN)
		OID=$OID_cyan
		NAME="Toner cyan"
		UNIT="%"
		FACTOR=1
		CHECK_TYPE=gt # Greater than
		check_result
		;;
  MAGENTA)
		OID=$OID_magenta
		NAME="Toner magenta"
		UNIT="%"
		FACTOR=1
		CHECK_TYPE=gt # Greater than
		check_result
		;;
  YELLOW)
		OID=$OID_yellow
		NAME="Toner yellow"
		UNIT="%"
		FACTOR=1
		CHECK_TYPE=gt # Greater than
		check_result
		;;
  *)
		echo "Usage: $PROG <IP_ADDR COMMUNITY RESOURCE WARNING CRITICAL>"
		;;
esac
exit $UNKNOW
